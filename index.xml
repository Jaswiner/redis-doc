<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on Redis Doc</title>
    <link>https://jaswine.com/docs/redis/</link>
    <description>Recent content in Redis on Redis Doc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://jaswine.com/docs/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://jaswine.com/docs/redis/docs/app/springboot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jaswine.com/docs/redis/docs/app/springboot/</guid>
      <description> SpringBoot连接Redis @Version:2.1.5.RELEASE
@SpringBoot使用Doc:🔗SpringBoot Doc @ Jaswine
1.导入依赖包 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-redis&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt;  2.配置(yaml) spring: redis: # 基础配置 database: 0 host: 127.0.0.1 port: 6379 password: 123456 # 连接池配置 jedis: pool: max-active: 8 max-wait: -1ms max-idle: 8 min-idle: 0  3.使用 @RunWith(SpringJUnit4ClassRunner.class) @SpringApplicationConfiguration(Application.class) public class ApplicationTests { @Autowired private StringRedisTemplate stringRedisTemplate; @Test public void test() throws Exception { // 保存字符串 stringRedisTemplate.opsForValue().set(&amp;quot;aaa&amp;quot;, &amp;quot;111&amp;quot;); Assert.assertEquals(&amp;quot;111&amp;quot;, stringRedisTemplate.opsForValue().get(&amp;quot;aaa&amp;quot;)); } }  附1:配置持久化 附2:不同数据类型的操作函数 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jaswine.com/docs/redis/docs/base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jaswine.com/docs/redis/docs/base/</guid>
      <description>Redis概述 Redis版本及特性  Redis2.6[2012]
 服务端支持Lua脚本 去掉虚拟内存相关功能 放开客户端连接数的硬编码限制 键的过期时间支持到毫秒级 从节点支持只读功能 两个新的位图命令:bitcount &amp;amp; bitop 增强了redis-benchmark的功能:支持定制化压测 &amp;amp; CSV输出等 基于浮点数自增命令:incrbyfloat &amp;amp; hincrbyfloat redis-cli可以使用&amp;ndash;eval参数实现Lua脚本执行 shutdown命令增强 去掉了集群代码(留在3.0中更新) sort命令优化  Redis2.8[2013]
 添加部分主从复制的功能 尝试支持IPV6 可以通过config set命令设置maxclients 可以用bind命令绑定多个IP地址 设置了明显的进程名，方便使用ps命令查看系统进程 config rewrite命令可以将config set持久化到Redis配置文件中 发布订阅添加了pubsub
  Redis3.0[2015]
 Redis Cluster：Redis的官方分布式实现。 全新的embedded string对象编码结果，优化小对象内存访问，在特定的工作负载下载速度大幅提升。 LRU算法大幅提升。 migrate连接缓存，大幅提升键迁移的速度。 migrate命令两个新的参数copy和replace。 新的client pause命令，在指定时间内停止处理客户端请求。 bitcount命令性能提升。 cinfig set设置maxmemory时候可以设置不同的单位（之前只能是字节）。 Redis日志小做调整：日志中会反应当前实例的角色（master或者slave）。 incr命令性能提升。  Redis3.2[2016]
 添加GEO相关功能。 SDS在速度和节省空间上都做了优化。 支持用upstart或者systemd管理Redis进程。 新的List编码类型：quicklist。 从节点读取过期数据保证一致性。 添加了hstrlen命令。 增强了debug命令，支持了更多的参数。 Lua脚本功能增强。 添加了Lua Debugger。 config set 支持更多的配置参数。 优化了Redis崩溃后的相关报告。 新的RDB格式，但是仍然兼容旧的RDB。 加速RDB的加载速度。 spop命令支持个数参数。 cluster nodes命令得到加速。 Jemalloc更新到4.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jaswine.com/docs/redis/docs/common/ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jaswine.com/docs/redis/docs/common/ds/</guid>
      <description> Redis中的数据类型 数据类型及其对应的数据结构 Redis中有五种数据类型:
   数据类型 value底层数据结构 特点     STRING 字符串    LIST 链表    HASH hash表    SET     ZSET      </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jaswine.com/docs/redis/docs/install/base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jaswine.com/docs/redis/docs/install/base/</guid>
      <description> Redis安装 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jaswine.com/docs/redis/docs/install/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jaswine.com/docs/redis/docs/install/docker/</guid>
      <description> 使用Docker安装Redis </description>
    </item>
    
    <item>
      <title></title>
      <link>https://jaswine.com/docs/redis/docs/install/yum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jaswine.com/docs/redis/docs/install/yum/</guid>
      <description> 使用YUM安装Redis // 1.查询是否有可以安装的包 yum list redis // 2.没有的话安装仓库 yum install epel-release // 3.安装Redis yum install redis  </description>
    </item>
    
  </channel>
</rss>